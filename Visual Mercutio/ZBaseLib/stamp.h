//## begin module%334FC46302EC.cm preserve=no
//      %X% %Q% %Z% %W%
//## end module%334FC46302EC.cm

//## begin module%334FC46302EC.cp preserve=no
//    ADSoft Copyright 1994-1995
//    Dominique Aigroz
//## end module%334FC46302EC.cp

//## Module: Stamp%334FC46302EC; Package specification
//## Subsystem: ZBaseLib%37A08E0C019D
//## Source file: z:\adsoft~1\ZBaseLib\Stamp.h

#ifndef Stamp_h
#define Stamp_h 1

//## begin module%334FC46302EC.additionalIncludes preserve=no
//## end module%334FC46302EC.additionalIncludes

//## begin module%334FC46302EC.includes preserve=yes
//change the definition of AFX_EXT... to make it import
#undef AFX_EXT_CLASS
#undef AFX_EXT_API
#undef AFX_EXT_DATA
#define AFX_EXT_CLASS AFX_CLASS_IMPORT
#define AFX_EXT_API AFX_API_IMPORT
#define AFX_EXT_DATA AFX_DATA_IMPORT
//## end module%334FC46302EC.includes

//## begin module%334FC46302EC.declarations preserve=no
//## end module%334FC46302EC.declarations

#include "ZBDate.h"

#ifdef _ZBASELIBEXPORT
//put the values back to make AFX_EXT_CLASS export again
#undef AFX_EXT_CLASS
#undef AFX_EXT_API
#undef AFX_EXT_DATA
#define AFX_EXT_CLASS AFX_CLASS_EXPORT
#define AFX_EXT_API AFX_API_EXPORT
#define AFX_EXT_DATA AFX_DATA_EXPORT
#endif

// JMR-MODIF - Le 24 février 2006 - Ajout des décorations unicode _T( ), nettoyage du code inutile. (En commentaires)

//## begin module%334FC46302EC.additionalDeclarations preserve=yes
enum DocumentFileType
{
    FormDocumentFileType,
    ProcessDocumentFileType,
    ModelDocumentFileType
};

enum EFileTypeDefinition
{
    E_FD_DocumentType,
    E_FD_TemplateType,
    E_FD_LibraryType
};

enum DocumentDataType
{
    FormDataType,
    BinaryDataType,
    ExternalFormDataType,
    ExternalBinaryDataType,
    URLDataType
};
//## end module%334FC46302EC.additionalDeclarations

//## Class: ZDStamp%334FC4600382
//    This class represents a stamp for files generated by
//    ADSoft programs.
//## Category: ZBaseLib::Stamp classes%36F38AA403D8
//## Subsystem: ZBaseLib%37A08E0C019D
//## Persistence: Transient
//## Cardinality/Multiplicity: n

class AFX_EXT_CLASS ZDStamp
{
    //## begin ZDStamp%334FC4600382.initialDeclarations preserve=yes
    //## end ZDStamp%334FC4600382.initialDeclarations

public:

    //## Constructors (generated)
    ZDStamp();

    ZDStamp( const ZDStamp &right );

    //## Destructor (generated)
    virtual ~ZDStamp();

    //## Assignment Operation (generated)
    const ZDStamp & operator=( const ZDStamp &right );


    //## Other Operations (specified)
    //## Operation: operator >>%831614623
    // Store from the archive to the object Stamp.
    AFX_EXT_API friend CArchive& operator >> ( CArchive& ar, ZDStamp& Stamp );

    //## Operation: operator <<%831614624
    // Store the object Stamp to the archive.
    AFX_EXT_API friend CArchive& operator << ( CArchive& ar, const ZDStamp& Stamp );

    //## Operation: ReadFromFile%927439022
    // Read the stamp from a given filename.
    virtual BOOL ReadFromFile ( CString Filename );

    //## Operation: WriteToFile%939754019
    // Write the stamp to a given filename.
    virtual BOOL WriteToFile ( CString Filename );

    //## Operation: IsReadOnly%936298254
    // return TRUE if the document is read-only.
    BOOL IsReadOnly () const;

    //## Operation: SetAsReadOnly%936298255
    // Set the file as read-only.
    void SetAsReadOnly ( BOOL value = TRUE );

    //## Operation: IsStandardForm%936298259
    // return TRUE if the form is standard.
    BOOL IsStandardForm () const;

    //## Operation: IsInternalKeyEqualTo%936298260
    // return TRUE if the key is equal to the standard form.
    BOOL IsInternalKeyEqualTo ( const CString Key );

    //## Operation: IncrementPublishVersionOfFile%939754015
    // Read the publish file version and increment it. Return
    // -1 if something wrong.
    LONG IncrementPublishVersionOfFile ( const CString Filename );

    //## Operation: DecrementPublishVersionOfFile%939754016
    // Decrement the published file version. Return -1 if
    // something wrong.
    LONG DecrementPublishVersionOfFile ( const CString Filename );

    //## Operation: SetPublishVersionOfFile%939754017
    // Return TRUE if the file version has been correctly set.
    BOOL SetPublishVersionOfFile ( const CString Filename, LONG Version );

    //## Operation: GetPublishVersionOfFile%939754018
    // Return the publish file version.
    LONG GetPublishVersionOfFile ( const CString Filename );

    //## Operation: Clone%939754020
    ZDStamp* Clone ();

    //## Get and Set Operations for Class Attributes (generated)

    //## Attribute: Stamp%334FC4600389
    // This string is a stamp to recognize the file.
    const CString GetStamp () const;
    void SetStamp ( CString value );

    //## Attribute: InternalVersion%334FC460038A
    // Represents the file version.
    const long GetInternalVersion () const;
    void SetInternalVersion ( long value );

    //## Attribute: Title%334FC460038B
    // The title of the file.
    const CString GetTitle () const;
    void SetTitle ( CString value );

    //## Attribute: Explanation%334FC460038C
    // The description of the file.
    const CString GetExplanation () const;
    void SetExplanation ( CString value );

    //## Attribute: Template%334FC460038E
    // The file where the template has been defined.
    const CString GetTemplate () const;
    void SetTemplate ( CString value );

    //## Attribute: StampCreationDate%334FC460038F
    // The creation date.
    const ZBDate GetStampCreationDate () const;
    void SetStampCreationDate ( ZBDate value );

    //## Attribute: StampModificationDate%334FC4600390
    // The date of the last modification.
    const ZBDate GetStampModificationDate () const;
    void SetStampModificationDate ( ZBDate value );

    //## Attribute: ProgramGenerator%334FC46003AE
    // Save the program that has manipulates the file.
    const CString GetProgramGenerator () const;
    void SetProgramGenerator ( CString value );

    //## Attribute: FileType%334FC46003AF
    const EFileTypeDefinition GetFileType() const;
    void SetFileType(EFileTypeDefinition value);

    //## Attribute: PublishVersion%373D3A570166
    // The Published version.
    const LONG GetPublishVersion () const;
    void SetPublishVersion ( LONG value );

    //## Attribute: PublishDate%373D3A5702D9
    // The date of the publication.
    const ZBDate GetPublishDate () const;
    void SetPublishDate ( ZBDate value );

    //## Attribute: PublishUser%373D3A570329
    // The user responsible of the publication.
    const CString GetPublishUser () const;
    void SetPublishUser ( CString value );

    //## Attribute: InternalKey%37CECA2203AD
    // Defines the internal key for checking if the form is a
    // standard form.
    const CString GetInternalKey () const;
    void SetInternalKey ( CString value );

    //## Attribute: DocumentDataType%37F63BC303D0
    // Contains the document data type. It is used when the
    // data contained in the doucument is not a forms.
    const DocumentDataType GetDocumentDataType () const;
    void SetDocumentDataType ( DocumentDataType value );

    //## Attribute: DocumentFileType%3818BCFD0262
    // Define the type of document, forms or process.
    const DocumentFileType GetDocumentFileType () const;
    void SetDocumentFileType ( DocumentFileType value );

    // Additional Public Declarations
    //## begin ZDStamp%334FC4600382.public preserve=yes
    //## end ZDStamp%334FC4600382.public

protected:

    // Additional Protected Declarations
    //## begin ZDStamp%334FC4600382.protected preserve=yes
    //## end ZDStamp%334FC4600382.protected

private:

    // Data Members for Class Attributes

    //## begin ZDStamp::Stamp%334FC4600389.attr preserve=no  public: CString {V} 
    CString m_Stamp;
    //## end ZDStamp::Stamp%334FC4600389.attr

    //## begin ZDStamp::InternalVersion%334FC460038A.attr preserve=no  public: long {V} 
    long m_InternalVersion;
    //## end ZDStamp::InternalVersion%334FC460038A.attr

    //## begin ZDStamp::Title%334FC460038B.attr preserve=no  public: CString {V} 
    CString m_Title;
    //## end ZDStamp::Title%334FC460038B.attr

    //## begin ZDStamp::Explanation%334FC460038C.attr preserve=no  public: CString {V} 
    CString m_Explanation;
    //## end ZDStamp::Explanation%334FC460038C.attr

    //## begin ZDStamp::Template%334FC460038E.attr preserve=no  public: CString {V} 
    CString m_Template;
    //## end ZDStamp::Template%334FC460038E.attr

    //## begin ZDStamp::StampCreationDate%334FC460038F.attr preserve=no  public: ZBDate {V} 
    ZBDate m_StampCreationDate;
    //## end ZDStamp::StampCreationDate%334FC460038F.attr

    //## begin ZDStamp::StampModificationDate%334FC4600390.attr preserve=no  public: ZBDate {V} 
    ZBDate m_StampModificationDate;
    //## end ZDStamp::StampModificationDate%334FC4600390.attr

    //## begin ZDStamp::ProgramGenerator%334FC46003AE.attr preserve=no  public: CString {V} 
    CString m_ProgramGenerator;
    //## end ZDStamp::ProgramGenerator%334FC46003AE.attr

    //## begin ZDStamp::FileType%334FC46003AF.attr preserve=no  public: FileTypeDefinition {V} 
    EFileTypeDefinition m_FileType;
    //## end ZDStamp::FileType%334FC46003AF.attr

    //## begin ZDStamp::PublishVersion%373D3A570166.attr preserve=no  public: LONG {U} 
    LONG m_PublishVersion;
    //## end ZDStamp::PublishVersion%373D3A570166.attr

    //## begin ZDStamp::PublishDate%373D3A5702D9.attr preserve=no  public: ZBDate {U} 
    ZBDate m_PublishDate;
    //## end ZDStamp::PublishDate%373D3A5702D9.attr

    //## begin ZDStamp::PublishUser%373D3A570329.attr preserve=no  public: CString {U} 
    CString m_PublishUser;
    //## end ZDStamp::PublishUser%373D3A570329.attr

    //## Attribute: ReadOnly%37CD77BA03B7
    // Defines if the document is read-only.
    //## begin ZDStamp::ReadOnly%37CD77BA03B7.attr preserve=no  private: BOOL {U} 
    BOOL m_ReadOnly;
    //## end ZDStamp::ReadOnly%37CD77BA03B7.attr

    //## begin ZDStamp::InternalKey%37CECA2203AD.attr preserve=no  public: CString {U} 
    CString m_InternalKey;
    //## end ZDStamp::InternalKey%37CECA2203AD.attr

    //## begin ZDStamp::DocumentDataType%37F63BC303D0.attr preserve=no  public: DocumentDataType {U} 
    DocumentDataType m_DocumentDataType;
    //## end ZDStamp::DocumentDataType%37F63BC303D0.attr

    //## begin ZDStamp::DocumentFileType%3818BCFD0262.attr preserve=no  public: DocumentFileType {U} 
    DocumentFileType m_DocumentFileType;
    //## end ZDStamp::DocumentFileType%3818BCFD0262.attr

    // Additional Private Declarations
    //## begin ZDStamp%334FC4600382.private preserve=yes
    //## end ZDStamp%334FC4600382.private
};

//## begin ZDStamp%334FC4600382.postscript preserve=yes
//## end ZDStamp%334FC4600382.postscript

//## Other Operations (inline)
inline BOOL ZDStamp::IsReadOnly () const
{
    //## begin ZDStamp::IsReadOnly%936298254.body preserve=yes
    return m_ReadOnly;
    //## end ZDStamp::IsReadOnly%936298254.body
}

inline void ZDStamp::SetAsReadOnly ( BOOL value )
{
    //## begin ZDStamp::SetAsReadOnly%936298255.body preserve=yes
    m_ReadOnly = value;
    //## end ZDStamp::SetAsReadOnly%936298255.body
}

inline BOOL ZDStamp::IsStandardForm () const
{
    //## begin ZDStamp::IsStandardForm%936298259.body preserve=yes
    return m_InternalKey.IsEmpty() == FALSE;
    //## end ZDStamp::IsStandardForm%936298259.body
}

//## Get and Set Operations for Class Attributes (inline)
inline const CString ZDStamp::GetStamp () const
{
    //## begin ZDStamp::GetStamp%334FC4600389.get preserve=no
    return m_Stamp;
    //## end ZDStamp::GetStamp%334FC4600389.get
}

inline void ZDStamp::SetStamp ( CString value )
{
    //## begin ZDStamp::SetStamp%334FC4600389.set preserve=no
    m_Stamp = value;
    //## end ZDStamp::SetStamp%334FC4600389.set
}

inline const long ZDStamp::GetInternalVersion () const
{
    //## begin ZDStamp::GetInternalVersion%334FC460038A.get preserve=no
    return m_InternalVersion;
    //## end ZDStamp::GetInternalVersion%334FC460038A.get
}

inline void ZDStamp::SetInternalVersion ( long value )
{
    //## begin ZDStamp::SetInternalVersion%334FC460038A.set preserve=no
    m_InternalVersion = value;
    //## end ZDStamp::SetInternalVersion%334FC460038A.set
}

inline const CString ZDStamp::GetTitle () const
{
    //## begin ZDStamp::GetTitle%334FC460038B.get preserve=no
    return m_Title;
    //## end ZDStamp::GetTitle%334FC460038B.get
}

inline void ZDStamp::SetTitle ( CString value )
{
    //## begin ZDStamp::SetTitle%334FC460038B.set preserve=no
    m_Title = value;
    //## end ZDStamp::SetTitle%334FC460038B.set
}

inline const CString ZDStamp::GetExplanation () const
{
    //## begin ZDStamp::GetExplanation%334FC460038C.get preserve=no
    return m_Explanation;
    //## end ZDStamp::GetExplanation%334FC460038C.get
}

inline void ZDStamp::SetExplanation ( CString value )
{
    //## begin ZDStamp::SetExplanation%334FC460038C.set preserve=no
    m_Explanation = value;
    //## end ZDStamp::SetExplanation%334FC460038C.set
}

inline const CString ZDStamp::GetTemplate () const
{
    //## begin ZDStamp::GetTemplate%334FC460038E.get preserve=no
    return m_Template;
    //## end ZDStamp::GetTemplate%334FC460038E.get
}

inline void ZDStamp::SetTemplate ( CString value )
{
    //## begin ZDStamp::SetTemplate%334FC460038E.set preserve=no
    m_Template = value;
    //## end ZDStamp::SetTemplate%334FC460038E.set
}

inline const ZBDate ZDStamp::GetStampCreationDate () const
{
    //## begin ZDStamp::GetStampCreationDate%334FC460038F.get preserve=no
    return m_StampCreationDate;
    //## end ZDStamp::GetStampCreationDate%334FC460038F.get
}

inline void ZDStamp::SetStampCreationDate ( ZBDate value )
{
    //## begin ZDStamp::SetStampCreationDate%334FC460038F.set preserve=no
    m_StampCreationDate = value;
    //## end ZDStamp::SetStampCreationDate%334FC460038F.set
}

inline const ZBDate ZDStamp::GetStampModificationDate () const
{
    //## begin ZDStamp::GetStampModificationDate%334FC4600390.get preserve=no
    return m_StampModificationDate;
    //## end ZDStamp::GetStampModificationDate%334FC4600390.get
}

inline void ZDStamp::SetStampModificationDate ( ZBDate value )
{
    //## begin ZDStamp::SetStampModificationDate%334FC4600390.set preserve=no
    m_StampModificationDate = value;
    //## end ZDStamp::SetStampModificationDate%334FC4600390.set
}

inline const CString ZDStamp::GetProgramGenerator () const
{
    //## begin ZDStamp::GetProgramGenerator%334FC46003AE.get preserve=no
    return m_ProgramGenerator;
    //## end ZDStamp::GetProgramGenerator%334FC46003AE.get
}

inline void ZDStamp::SetProgramGenerator ( CString value )
{
    //## begin ZDStamp::SetProgramGenerator%334FC46003AE.set preserve=no
    m_ProgramGenerator = value;
    //## end ZDStamp::SetProgramGenerator%334FC46003AE.set
}

inline const EFileTypeDefinition ZDStamp::GetFileType() const
{
    //## begin ZDStamp::GetFileType%334FC46003AF.get preserve=no
    return m_FileType;
    //## end ZDStamp::GetFileType%334FC46003AF.get
}

inline void ZDStamp::SetFileType(EFileTypeDefinition value)
{
    //## begin ZDStamp::SetFileType%334FC46003AF.set preserve=no
    m_FileType = value;
    //## end ZDStamp::SetFileType%334FC46003AF.set
}

inline const LONG ZDStamp::GetPublishVersion () const
{
    //## begin ZDStamp::GetPublishVersion%373D3A570166.get preserve=no
    return m_PublishVersion;
    //## end ZDStamp::GetPublishVersion%373D3A570166.get
}

inline void ZDStamp::SetPublishVersion ( LONG value )
{
    //## begin ZDStamp::SetPublishVersion%373D3A570166.set preserve=no
    m_PublishVersion = value;
    //## end ZDStamp::SetPublishVersion%373D3A570166.set
}

inline const ZBDate ZDStamp::GetPublishDate () const
{
    //## begin ZDStamp::GetPublishDate%373D3A5702D9.get preserve=no
    return m_PublishDate;
    //## end ZDStamp::GetPublishDate%373D3A5702D9.get
}

inline void ZDStamp::SetPublishDate ( ZBDate value )
{
    //## begin ZDStamp::SetPublishDate%373D3A5702D9.set preserve=no
    m_PublishDate = value;
    //## end ZDStamp::SetPublishDate%373D3A5702D9.set
}

inline const CString ZDStamp::GetPublishUser () const
{
    //## begin ZDStamp::GetPublishUser%373D3A570329.get preserve=no
    return m_PublishUser;
    //## end ZDStamp::GetPublishUser%373D3A570329.get
}

inline void ZDStamp::SetPublishUser ( CString value )
{
    //## begin ZDStamp::SetPublishUser%373D3A570329.set preserve=no
    m_PublishUser = value;
    //## end ZDStamp::SetPublishUser%373D3A570329.set
}

inline const CString ZDStamp::GetInternalKey () const
{
    //## begin ZDStamp::GetInternalKey%37CECA2203AD.get preserve=no
    return m_InternalKey;
    //## end ZDStamp::GetInternalKey%37CECA2203AD.get
}

inline void ZDStamp::SetInternalKey ( CString value )
{
    //## begin ZDStamp::SetInternalKey%37CECA2203AD.set preserve=no
    m_InternalKey = value;
    //## end ZDStamp::SetInternalKey%37CECA2203AD.set
}

inline const DocumentDataType ZDStamp::GetDocumentDataType () const
{
    //## begin ZDStamp::GetDocumentDataType%37F63BC303D0.get preserve=no
    return m_DocumentDataType;
    //## end ZDStamp::GetDocumentDataType%37F63BC303D0.get
}

inline void ZDStamp::SetDocumentDataType ( DocumentDataType value )
{
    //## begin ZDStamp::SetDocumentDataType%37F63BC303D0.set preserve=no
    m_DocumentDataType = value;
    //## end ZDStamp::SetDocumentDataType%37F63BC303D0.set
}

inline const DocumentFileType ZDStamp::GetDocumentFileType () const
{
    //## begin ZDStamp::GetDocumentFileType%3818BCFD0262.get preserve=no
    return m_DocumentFileType;
    //## end ZDStamp::GetDocumentFileType%3818BCFD0262.get
}

inline void ZDStamp::SetDocumentFileType ( DocumentFileType value )
{
    //## begin ZDStamp::SetDocumentFileType%3818BCFD0262.set preserve=no
    m_DocumentFileType = value;
    //## end ZDStamp::SetDocumentFileType%3818BCFD0262.set
}

//## begin module%334FC46302EC.epilog preserve=yes
//## end module%334FC46302EC.epilog

#endif